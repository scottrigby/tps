<?php
/**
 * @file
 * Code for the tps_class feature.
 */

include_once 'tps_class.features.inc';

/**
 * Implements hook_block_info().
 */
function tps_class_block_info() {
  $blocks['create_links'] = array(
    'info' => t('Class create links'),
    'cache' => DRUPAL_NO_CACHE
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function tps_class_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'create_links':
      // Classes are nodes.
      $entity_type = 'node';
      if ($entity = menu_get_object()) {
        $block['subject'] = t('Create content');
        $block['content'] = tps_class_create_links($entity_type, $entity);
      }
      break;
  }
  return $block;
}

/**
 * Gathers info about TPS Class reference fields.
 *
 * @return array
 *   An associative array of class reference field info, keyed by field_name.
 */
function tps_class_get_reference_fields() {
  $fields = $field_names = array();

  // Get all entityreference field names.
  $query = db_select('field_config', 'f');
  $query->fields('f', array('field_name'));
  $query->condition('f.type', 'entityreference');
  $query->distinct();
  $rows = $query->execute();
  foreach ($rows as $row) {
    $field_names[] = $row->field_name;
  }

  // Narrow down to only those that reference the node 'class' bundle.
  foreach ($field_names as $field_name) {
    $field = field_info_field($field_name);
    if (!empty($field['settings']['handler_settings']['target_bundles'])) {
      if (in_array('class', $field['settings']['handler_settings']['target_bundles'] )) {
        $fields[$field_name] = field_info_field($field_name);
      }
    }
  }

  return $fields;
}


/**
 * Formats class content create links for Entityreference Prepopulate.
 *
 * @param string $entity_type
 *   The current entity type.
 * @param object $entity
 *   The current entity.
 *
 * @see og_node_create_links()
 */
function tps_class_create_links($entity_type, $entity) {
  $items = $element = array();

  // Get current entity ID.
  list($id,,,) = entity_extract_ids($entity_type, $entity);

  // Start building link options.
  $options['query'] = drupal_get_destination();

  // Add group entity ID.
  // Entityreference Prepopulate doesn't currently work with multiple gids, so
  // we can just use this function to return the first one. Normal
  // entityreference_prepopulate fields do work.
  // @todo Consider patching this.
  // @see https://drupal.org/node/2033937
  if ($context = og_context()) {
    $options['query'][OG_AUDIENCE_FIELD] = $context['gid'];
  }

  // Get all entityrefernce fields that target the class bundle.
  foreach (tps_class_get_reference_fields() as $field) {
    $options['query'][$field['field_name']] = $id;

    // Get the instances.
    foreach ($field['bundles'] as $entity_type => $bundles) {
      foreach ($bundles as $bundle_name) {
        $instance = field_info_instance($entity_type, $field['field_name'], $bundle_name);
        if (empty($instance['settings']['behaviors']['prepopulate']['status'])) {
          continue;
        }
        // @todo Get the entity creation UI programmatically (not easy AFAIK).
        //   So for now, only support nodes.
        if ($entity_type == 'node') {
          $name = node_type_get_name($bundle_name);
          // @todo check access.
          $entity = entity_create($entity_type, array('type' => $bundle_name));
          $access = entity_access('create', $entity_type, $entity);
          if ($access) {
            $items[] = array('data' => l($name, 'node/add/' . str_replace('_', '-', $bundle_name), $options));
          }
        }
      }
    }
  }

  $element['tps_class_create_links'] = array(
    '#theme' => 'item_list',
    '#items' => $items,
  );

  return $element;
}
