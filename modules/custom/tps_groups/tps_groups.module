<?php
/**
 * @file
 * Code for the TPS Learning Groups feature.
 */

include_once 'tps_groups.features.inc';

/**
 * Implements hook_entity_info_alter().
 */
function tps_groups_entity_info_alter(&$entity_info) {
  $entity_info['user']['view modes']['group'] = array(
    'label' => t('Group profile'),
    'custom settings' => TRUE,
  );
}

/**
 * Implements hook_user_view().
 */
function tps_groups_user_view($account) {
  $account->content['name'] = array(
    '#weight' => 0,
    '#markup' => '<h3>' . check_plain($account->name) . '</h3>',
  );

  // @todo Change to an entityreference comma-separated list field formatter.
  $groups = array();
  if (!empty($account->og_user_node[LANGUAGE_NONE])) {
    foreach ($account->og_user_node[LANGUAGE_NONE] as $item) {
      $group = node_load($item['target_id']);
      $groups[] = check_plain($group->title);
    }
  }
  $account->content['groups'] = array(
    '#markup' => implode(', ', $groups),
  );
}

/**
 * Implements hook_field_extra_fields()
 */
function tps_groups_field_extra_fields() {
  $extra = array();
  $extra['user']['user'] = array(
    'display' => array(
      'name' => array(
        'label' => t('Core user name'),
        'weight' => 0,
      ),
      'groups' => array(
        'label' => t('User groups'),
        'weight' => 0,
      ),
      // Made available by user_user_view().
      'user_picture' => array(
        'label' => t('Core user picture'),
        'weight' => 0,
      ),
    ),
  );
  return $extra;
}

/**
 * Implements hook_views_default_views_alter().
 *
 * Add og functionality to views only if the TPS Groups module is enabled.
 */
function tps_groups_views_default_views_alter(&$views) {
  if (isset($views['classes'])) {
    $handler =& $views['classes']->display['default']->handler;
    /* Filter criterion: Content: Groups (og_group_ref) */
    $handler->display->display_options['filters']['og_group_ref_target_id']['id'] = 'og_group_ref_target_id';
    $handler->display->display_options['filters']['og_group_ref_target_id']['table'] = 'og_membership';
    $handler->display->display_options['filters']['og_group_ref_target_id']['field'] = 'og_group_ref_target_id';
    $handler->display->display_options['filters']['og_group_ref_target_id']['exposed'] = TRUE;
    $handler->display->display_options['filters']['og_group_ref_target_id']['expose']['operator_id'] = 'og_group_ref_target_id_op';
    $handler->display->display_options['filters']['og_group_ref_target_id']['expose']['label'] = 'Groups';
    $handler->display->display_options['filters']['og_group_ref_target_id']['expose']['operator'] = 'og_group_ref_target_id_op';
    $handler->display->display_options['filters']['og_group_ref_target_id']['expose']['identifier'] = 'og_group_ref_target_id';
    $handler->display->display_options['filters']['og_group_ref_target_id']['expose']['multiple'] = TRUE;
    $handler->display->display_options['filters']['og_group_ref_target_id']['expose']['remember_roles'] = array(
      2 => '2',
      1 => 0,
      3 => 0,
    );
  }
}
